

---------------------------------------
-- ProcessarPedidos

DELIMITER //

CREATE PROCEDURE ProcessarPedidos()
BEGIN
    DECLARE done INT DEFAULT FALSE;
    DECLARE v_codigoPedido VARCHAR(255);
    DECLARE v_SKU VARCHAR(255);
    DECLARE v_quantidade INT;
    DECLARE v_valor DECIMAL(10, 2);
    DECLARE v_frete DECIMAL(10, 2);
    DECLARE v_estoque INT;

    -- Declarar o cursor
    DECLARE pedido_cursor CURSOR FOR 
        SELECT codigoPedido, SKU, quantidade, valor, frete 
        FROM wl_tempdata;
    
    -- Handler que define o que acontece quando o cursor atinge o fim dos dados
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;

    -- Abrir o cursor
    OPEN pedido_cursor;

    -- Começa o looping
    read_loop: LOOP
        FETCH pedido_cursor INTO v_codigoPedido, v_SKU, v_quantidade, v_valor, v_frete;
        
        IF done THEN
            LEAVE read_loop;
        END IF;

        -- Verificar estoque
        SELECT quantidade INTO v_estoque 
        FROM wl_estoque 
        WHERE SKU = v_SKU;

        IF v_estoque >= v_quantidade THEN
            -- Atualiza status do pedido para 'aprovado'
            UPDATE wl_pedidos
            SET status = 'aprovado'
            WHERE codigoPedido = v_codigoPedido;

            -- Atualiza o estoque
            UPDATE wl_estoque
            SET quantidade = quantidade - v_quantidade
            WHERE SKU = v_SKU;
        ELSE
            -- Atualiza status do pedido para 'pendente'
            UPDATE wl_pedidos
            SET status = 'pendente'
            WHERE codigoPedido = v_codigoPedido;

            -- Verifica se é necessário adicionar à tabela de compras
            INSERT INTO wl_compra (SKU, quantidade) 
            VALUES (v_SKU, v_quantidade)
            ON DUPLICATE KEY UPDATE quantidade = quantidade + v_quantidade;
        END IF;

    END LOOP;

    -- Fechar o cursor
    CLOSE pedido_cursor;
END //

DELIMITER ;

----------

--RenovarEstoque
DELIMITER //

CREATE PROCEDURE RenovarEstoque()
BEGIN
    DECLARE done INT DEFAULT FALSE;
    DECLARE v_SKU VARCHAR(255);
    DECLARE v_quantidade INT;

    -- Declare the cursor
    DECLARE estoque_cursor CURSOR FOR 
        SELECT SKU, SUM(quantidade) AS total_quantidade
        FROM wl_tempdata
        GROUP BY SKU;

    -- Declare a continue handler for when there are no more rows
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;

    -- Open the cursor
    OPEN estoque_cursor;

    -- Start looping through the cursor
    read_loop: LOOP
        FETCH estoque_cursor INTO v_SKU, v_quantidade;
        
        IF done THEN
            LEAVE read_loop;
        END IF;

        -- Verifica se o estoque está zerado
        IF (SELECT quantidade FROM wl_estoque WHERE SKU = v_SKU) = 0 THEN
            -- Atualiza o estoque com a nova quantidade
            INSERT INTO wl_estoque (SKU, quantidade) 
            VALUES (v_SKU, v_quantidade)
            ON DUPLICATE KEY UPDATE quantidade = quantidade + v_quantidade;
        END IF;

    END LOOP;

    -- Fechar o cursor
    CLOSE estoque_cursor;
END //

DELIMITER ;

